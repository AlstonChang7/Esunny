//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace TapTradeWrapperApi
{
    /// <summary>
    /// 平仓信息
    /// </summary>
    public class TapAPICloseInfo : global::System.IDisposable
    {
        private global::System.Runtime.InteropServices.HandleRef swigCPtr;
        protected bool swigCMemOwn;

        internal TapAPICloseInfo(global::System.IntPtr cPtr, bool cMemoryOwn)
        {
            swigCMemOwn = cMemoryOwn;
            swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
        }

        internal static global::System.Runtime.InteropServices.HandleRef getCPtr(TapAPICloseInfo obj)
        {
            return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
        }

        ~TapAPICloseInfo()
        {
            Dispose();
        }

        public virtual void Dispose()
        {
            lock (this)
            {
                if (swigCPtr.Handle != global::System.IntPtr.Zero)
                {
                    if (swigCMemOwn)
                    {
                        swigCMemOwn = false;
                        TapTradeWrapperPINVOKE.delete_TapAPICloseInfo(swigCPtr);
                    }
                    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
                }
                global::System.GC.SuppressFinalize(this);
            }
        }
        /// <summary>
        ///  客户资金帐号
        /// </summary>
        public string AccountNo
        {
            set
            {
                TapTradeWrapperPINVOKE.TapAPICloseInfo_AccountNo_set(swigCPtr, value);
            }
            get
            {
                string ret = TapTradeWrapperPINVOKE.TapAPICloseInfo_AccountNo_get(swigCPtr);
                return ret;
            }
        }
        /// <summary>
        /// 交易所编号
        /// </summary>
        public string ExchangeNo
        {
            set
            {
                TapTradeWrapperPINVOKE.TapAPICloseInfo_ExchangeNo_set(swigCPtr, value);
            }
            get
            {
                string ret = TapTradeWrapperPINVOKE.TapAPICloseInfo_ExchangeNo_get(swigCPtr);
                return ret;
            }
        }
        /// <summary>
        /// 品种类型
        /// </summary>
        public char CommodityType
        {
            set
            {
                TapTradeWrapperPINVOKE.TapAPICloseInfo_CommodityType_set(swigCPtr, value);
            }
            get
            {
                char ret = TapTradeWrapperPINVOKE.TapAPICloseInfo_CommodityType_get(swigCPtr);
                return ret;
            }
        }
        /// <summary>
        /// 品种编码类型
        /// </summary>
        public string CommodityNo
        {
            set
            {
                TapTradeWrapperPINVOKE.TapAPICloseInfo_CommodityNo_set(swigCPtr, value);
            }
            get
            {
                string ret = TapTradeWrapperPINVOKE.TapAPICloseInfo_CommodityNo_get(swigCPtr);
                return ret;
            }
        }
        /// <summary>
        /// 合约
        /// </summary>
        public string ContractNo
        {
            set
            {
                TapTradeWrapperPINVOKE.TapAPICloseInfo_ContractNo_set(swigCPtr, value);
            }
            get
            {
                string ret = TapTradeWrapperPINVOKE.TapAPICloseInfo_ContractNo_get(swigCPtr);
                return ret;
            }
        }
        /// <summary>
        /// 执行价格
        /// </summary>
        public string StrikePrice
        {
            set
            {
                TapTradeWrapperPINVOKE.TapAPICloseInfo_StrikePrice_set(swigCPtr, value);
            }
            get
            {
                string ret = TapTradeWrapperPINVOKE.TapAPICloseInfo_StrikePrice_get(swigCPtr);
                return ret;
            }
        }
        /// <summary>
        /// 看张看跌
        /// </summary>
        public char CallOrPutFlag
        {
            set
            {
                TapTradeWrapperPINVOKE.TapAPICloseInfo_CallOrPutFlag_set(swigCPtr, value);
            }
            get
            {
                char ret = TapTradeWrapperPINVOKE.TapAPICloseInfo_CallOrPutFlag_get(swigCPtr);
                return ret;
            }
        }
        /// <summary>
        /// 平仓一边的买入卖出
        /// </summary>
        public char CloseSide
        {
            set
            {
                TapTradeWrapperPINVOKE.TapAPICloseInfo_CloseSide_set(swigCPtr, value);
            }
            get
            {
                char ret = TapTradeWrapperPINVOKE.TapAPICloseInfo_CloseSide_get(swigCPtr);
                return ret;
            }
        }
        /// <summary>
        /// 平仓成交量
        /// </summary>
        public uint CloseQty
        {
            set
            {
                TapTradeWrapperPINVOKE.TapAPICloseInfo_CloseQty_set(swigCPtr, value);
            }
            get
            {
                uint ret = TapTradeWrapperPINVOKE.TapAPICloseInfo_CloseQty_get(swigCPtr);
                return ret;
            }
        }
        /// <summary>
        /// 开仓成交价
        /// </summary>
        public double OpenPrice
        {
            set
            {
                TapTradeWrapperPINVOKE.TapAPICloseInfo_OpenPrice_set(swigCPtr, value);
            }
            get
            {
                double ret = TapTradeWrapperPINVOKE.TapAPICloseInfo_OpenPrice_get(swigCPtr);
                return ret;
            }
        }
        /// <summary>
        /// 平仓成交价
        /// </summary>
        public double ClosePrice
        {
            set
            {
                TapTradeWrapperPINVOKE.TapAPICloseInfo_ClosePrice_set(swigCPtr, value);
            }
            get
            {
                double ret = TapTradeWrapperPINVOKE.TapAPICloseInfo_ClosePrice_get(swigCPtr);
                return ret;
            }
        }
        /// <summary>
        /// 本地成交号
        /// </summary>
        public string OpenMatchNo
        {
            set
            {
                TapTradeWrapperPINVOKE.TapAPICloseInfo_OpenMatchNo_set(swigCPtr, value);
            }
            get
            {
                string ret = TapTradeWrapperPINVOKE.TapAPICloseInfo_OpenMatchNo_get(swigCPtr);
                return ret;
            }
        }
        /// <summary>
        /// 成交时间
        /// </summary>
        public string OpenMatchDateTime
        {
            set
            {
                TapTradeWrapperPINVOKE.TapAPICloseInfo_OpenMatchDateTime_set(swigCPtr, value);
            }
            get
            {
                string ret = TapTradeWrapperPINVOKE.TapAPICloseInfo_OpenMatchDateTime_get(swigCPtr);
                return ret;
            }
        }
        /// <summary>
        /// 本地成交号
        /// </summary>
        public string CloseMatchNo
        {
            set
            {
                TapTradeWrapperPINVOKE.TapAPICloseInfo_CloseMatchNo_set(swigCPtr, value);
            }
            get
            {
                string ret = TapTradeWrapperPINVOKE.TapAPICloseInfo_CloseMatchNo_get(swigCPtr);
                return ret;
            }
        }
        /// <summary>
        /// 成交时间
        /// </summary>
        public string CloseMatchDateTime
        {
            set
            {
                TapTradeWrapperPINVOKE.TapAPICloseInfo_CloseMatchDateTime_set(swigCPtr, value);
            }
            get
            {
                string ret = TapTradeWrapperPINVOKE.TapAPICloseInfo_CloseMatchDateTime_get(swigCPtr);
                return ret;
            }
        }
        /// <summary>
        /// 平仓流号
        /// </summary>
        public uint CloseStreamId
        {
            set
            {
                TapTradeWrapperPINVOKE.TapAPICloseInfo_CloseStreamId_set(swigCPtr, value);
            }
            get
            {
                uint ret = TapTradeWrapperPINVOKE.TapAPICloseInfo_CloseStreamId_get(swigCPtr);
                return ret;
            }
        }
        /// <summary>
        /// 品种币种组
        /// </summary>
        public string CommodityCurrencyGroup
        {
            set
            {
                TapTradeWrapperPINVOKE.TapAPICloseInfo_CommodityCurrencyGroup_set(swigCPtr, value);
            }
            get
            {
                string ret = TapTradeWrapperPINVOKE.TapAPICloseInfo_CommodityCurrencyGroup_get(swigCPtr);
                return ret;
            }
        }
        /// <summary>
        /// 品种币种
        /// </summary>
        public string CommodityCurrency
        {
            set
            {
                TapTradeWrapperPINVOKE.TapAPICloseInfo_CommodityCurrency_set(swigCPtr, value);
            }
            get
            {
                string ret = TapTradeWrapperPINVOKE.TapAPICloseInfo_CommodityCurrency_get(swigCPtr);
                return ret;
            }
        }
        /// <summary>
        /// 平仓盈亏
        /// </summary>
        public double CloseProfit
        {
            set
            {
                TapTradeWrapperPINVOKE.TapAPICloseInfo_CloseProfit_set(swigCPtr, value);
            }
            get
            {
                double ret = TapTradeWrapperPINVOKE.TapAPICloseInfo_CloseProfit_get(swigCPtr);
                return ret;
            }
        }

        public TapAPICloseInfo() : this(TapTradeWrapperPINVOKE.new_TapAPICloseInfo(), true)
        {
        }

    }

}
