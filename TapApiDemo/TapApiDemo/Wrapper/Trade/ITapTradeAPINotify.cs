//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace TapTradeWrapperApi
{

    public class ITapTradeAPINotify : global::System.IDisposable
    {
        private global::System.Runtime.InteropServices.HandleRef swigCPtr;
        protected bool swigCMemOwn;

        internal ITapTradeAPINotify(global::System.IntPtr cPtr, bool cMemoryOwn)
        {
            swigCMemOwn = cMemoryOwn;
            swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
        }

        internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ITapTradeAPINotify obj)
        {
            return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
        }

        ~ITapTradeAPINotify()
        {
            Dispose();
        }

        public virtual void Dispose()
        {
            lock (this)
            {
                if (swigCPtr.Handle != global::System.IntPtr.Zero)
                {
                    if (swigCMemOwn)
                    {
                        swigCMemOwn = false;
                        TapTradeWrapperAPIPINVOKE.delete_ITapTradeAPINotify(swigCPtr);
                    }
                    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
                }
                global::System.GC.SuppressFinalize(this);
            }
        }

        public virtual void OnConnect()
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnConnect(swigCPtr);
        }

        public virtual void OnRspLogin(int errorCode, TapAPITradeLoginRspInfo loginRspInfo)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRspLogin(swigCPtr, errorCode, TapAPITradeLoginRspInfo.getCPtr(loginRspInfo));
        }

        public virtual void OnRtnContactInfo(int errorCode, char isLast, string ContactInfo)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRtnContactInfo(swigCPtr, errorCode, isLast, ContactInfo);
        }

        public virtual void OnRspRequestVertificateCode(uint sessionID, int errorCode, TapAPIRequestVertificateCodeRsp rsp)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRspRequestVertificateCode(swigCPtr, sessionID, errorCode, TapAPIRequestVertificateCodeRsp.getCPtr(rsp));
        }

        public virtual void OnExpriationDate(string date, int days)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnExpriationDate(swigCPtr, date, days);
        }

        public virtual void OnAPIReady(int errorCode)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnAPIReady(swigCPtr, errorCode);
        }

        public virtual void OnDisconnect(int reasonCode)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnDisconnect(swigCPtr, reasonCode);
        }

        public virtual void OnRspChangePassword(uint sessionID, int errorCode)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRspChangePassword(swigCPtr, sessionID, errorCode);
        }

        public virtual void OnRspAuthPassword(uint sessionID, int errorCode)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRspAuthPassword(swigCPtr, sessionID, errorCode);
        }

        public virtual void OnRspSetReservedInfo(uint sessionID, int errorCode, string info)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRspSetReservedInfo(swigCPtr, sessionID, errorCode, info);
        }

        public virtual void OnRspQryAccount(uint sessionID, uint errorCode, char isLast, TapAPIAccountInfo info)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRspQryAccount(swigCPtr, sessionID, errorCode, isLast, TapAPIAccountInfo.getCPtr(info));
        }

        public virtual void OnRspQryFund(uint sessionID, int errorCode, char isLast, TapAPIFundData info)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRspQryFund(swigCPtr, sessionID, errorCode, isLast, TapAPIFundData.getCPtr(info));
        }

        public virtual void OnRtnFund(TapAPIFundData info)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRtnFund(swigCPtr, TapAPIFundData.getCPtr(info));
        }

        public virtual void OnRspQryExchange(uint sessionID, int errorCode, char isLast, TapAPIExchangeInfo info)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRspQryExchange(swigCPtr, sessionID, errorCode, isLast, TapAPIExchangeInfo.getCPtr(info));
        }

        public virtual void OnRspQryCommodity(uint sessionID, int errorCode, char isLast, TapAPICommodityInfo info)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRspQryCommodity(swigCPtr, sessionID, errorCode, isLast, TapAPICommodityInfo.getCPtr(info));
        }

        public virtual void OnRspQryContract(uint sessionID, int errorCode, char isLast, TapAPITradeContractInfo info)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRspQryContract(swigCPtr, sessionID, errorCode, isLast, TapAPITradeContractInfo.getCPtr(info));
        }

        public virtual void OnRtnContract(TapAPITradeContractInfo info)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRtnContract(swigCPtr, TapAPITradeContractInfo.getCPtr(info));
        }

        public virtual void OnRspOrderAction(uint sessionID, int errorCode, TapAPIOrderActionRsp info)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRspOrderAction(swigCPtr, sessionID, errorCode, TapAPIOrderActionRsp.getCPtr(info));
        }

        public virtual void OnRtnOrder(TapAPIOrderInfoNotice info)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRtnOrder(swigCPtr, TapAPIOrderInfoNotice.getCPtr(info));
        }

        public virtual void OnRspQryOrder(uint sessionID, int errorCode, char isLast, TapAPIOrderInfo info)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRspQryOrder(swigCPtr, sessionID, errorCode, isLast, TapAPIOrderInfo.getCPtr(info));
        }

        public virtual void OnRspQryOrderProcess(uint sessionID, int errorCode, char isLast, TapAPIOrderInfo info)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRspQryOrderProcess(swigCPtr, sessionID, errorCode, isLast, TapAPIOrderInfo.getCPtr(info));
        }

        public virtual void OnRspQryFill(uint sessionID, int errorCode, char isLast, TapAPIFillInfo info)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRspQryFill(swigCPtr, sessionID, errorCode, isLast, TapAPIFillInfo.getCPtr(info));
        }

        public virtual void OnRtnFill(TapAPIFillInfo info)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRtnFill(swigCPtr, TapAPIFillInfo.getCPtr(info));
        }

        public virtual void OnRspQryPosition(uint sessionID, int errorCode, char isLast, TapAPIPositionInfo info)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRspQryPosition(swigCPtr, sessionID, errorCode, isLast, TapAPIPositionInfo.getCPtr(info));
        }

        public virtual void OnRtnPosition(TapAPIPositionInfo info)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRtnPosition(swigCPtr, TapAPIPositionInfo.getCPtr(info));
        }

        public virtual void OnRspQryPositionSummary(uint sessionID, int errorCode, char isLast, TapAPIPositionSummary info)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRspQryPositionSummary(swigCPtr, sessionID, errorCode, isLast, TapAPIPositionSummary.getCPtr(info));
        }

        public virtual void OnRtnPositionSummary(TapAPIPositionSummary info)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRtnPositionSummary(swigCPtr, TapAPIPositionSummary.getCPtr(info));
        }

        public virtual void OnRtnPositionProfit(TapAPIPositionProfitNotice info)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRtnPositionProfit(swigCPtr, TapAPIPositionProfitNotice.getCPtr(info));
        }

        public virtual void OnRspQryCurrency(uint sessionID, int errorCode, char isLast, TapAPICurrencyInfo info)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRspQryCurrency(swigCPtr, sessionID, errorCode, isLast, TapAPICurrencyInfo.getCPtr(info));
        }

        public virtual void OnRspQryTradeMessage(uint sessionID, int errorCode, char isLast, TapAPITradeMessage info)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRspQryTradeMessage(swigCPtr, sessionID, errorCode, isLast, TapAPITradeMessage.getCPtr(info));
        }

        public virtual void OnRtnTradeMessage(TapAPITradeMessage info)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRtnTradeMessage(swigCPtr, TapAPITradeMessage.getCPtr(info));
        }

        public virtual void OnRspQryHisOrder(uint sessionID, int errorCode, char isLast, TapAPIHisOrderQryRsp info)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRspQryHisOrder(swigCPtr, sessionID, errorCode, isLast, TapAPIHisOrderQryRsp.getCPtr(info));
        }

        public virtual void OnRspQryHisOrderProcess(uint sessionID, int errorCode, char isLast, TapAPIHisOrderQryRsp info)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRspQryHisOrderProcess(swigCPtr, sessionID, errorCode, isLast, TapAPIHisOrderQryRsp.getCPtr(info));
        }

        public virtual void OnRspQryHisMatch(uint sessionID, int errorCode, char isLast, TapAPIHisMatchQryRsp info)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRspQryHisMatch(swigCPtr, sessionID, errorCode, isLast, TapAPIHisMatchQryRsp.getCPtr(info));
        }

        public virtual void OnRspQryHisPosition(uint sessionID, int errorCode, char isLast, TapAPIHisPositionQryRsp info)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRspQryHisPosition(swigCPtr, sessionID, errorCode, isLast, TapAPIHisPositionQryRsp.getCPtr(info));
        }

        public virtual void OnRspQryHisDelivery(uint sessionID, int errorCode, char isLast, TapAPIHisDeliveryQryRsp info)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRspQryHisDelivery(swigCPtr, sessionID, errorCode, isLast, TapAPIHisDeliveryQryRsp.getCPtr(info));
        }

        public virtual void OnRspQryAccountCashAdjust(uint sessionID, int errorCode, char isLast, TapAPIAccountCashAdjustQryRsp info)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRspQryAccountCashAdjust(swigCPtr, sessionID, errorCode, isLast, TapAPIAccountCashAdjustQryRsp.getCPtr(info));
        }

        public virtual void OnRspQryBill(uint sessionID, int errorCode, char isLast, TapAPIBillQryRsp info)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRspQryBill(swigCPtr, sessionID, errorCode, isLast, TapAPIBillQryRsp.getCPtr(info));
        }

        public virtual void OnRspQryAccountFeeRent(uint sessionID, int errorCode, char isLast, TapAPIAccountFeeRentQryRsp info)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRspQryAccountFeeRent(swigCPtr, sessionID, errorCode, isLast, TapAPIAccountFeeRentQryRsp.getCPtr(info));
        }

        public virtual void OnRspQryAccountMarginRent(uint sessionID, int errorCode, char isLast, TapAPIAccountMarginRentQryRsp info)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRspQryAccountMarginRent(swigCPtr, sessionID, errorCode, isLast, TapAPIAccountMarginRentQryRsp.getCPtr(info));
        }

        public virtual void OnRspHKMarketOrderInsert(uint sessionID, int errorCode, TapAPIOrderMarketInsertRsp info)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRspHKMarketOrderInsert(swigCPtr, sessionID, errorCode, TapAPIOrderMarketInsertRsp.getCPtr(info));
        }

        public virtual void OnRspHKMarketOrderDelete(uint sessionID, int errorCode, TapAPIOrderMarketInsertRsp info)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRspHKMarketOrderDelete(swigCPtr, sessionID, errorCode, TapAPIOrderMarketInsertRsp.getCPtr(info));
        }

        public virtual void OnHKMarketQuoteNotice(TapAPIOrderQuoteMarketNotice info)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnHKMarketQuoteNotice(swigCPtr, TapAPIOrderQuoteMarketNotice.getCPtr(info));
        }

        public virtual void OnRspOrderLocalRemove(uint sessionID, int errorCode, TapAPIOrderLocalRemoveRsp info)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRspOrderLocalRemove(swigCPtr, sessionID, errorCode, TapAPIOrderLocalRemoveRsp.getCPtr(info));
        }

        public virtual void OnRspOrderLocalInput(uint sessionID, int errorCode, TapAPIOrderInfo info)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRspOrderLocalInput(swigCPtr, sessionID, errorCode, TapAPIOrderInfo.getCPtr(info));
        }

        public virtual void OnRspOrderLocalModify(uint sessionID, int errorCode, TapAPIOrderInfo info)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRspOrderLocalModify(swigCPtr, sessionID, errorCode, TapAPIOrderInfo.getCPtr(info));
        }

        public virtual void OnRspOrderLocalTransfer(uint sessionID, int errorCode, TapAPIOrderInfo info)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRspOrderLocalTransfer(swigCPtr, sessionID, errorCode, TapAPIOrderInfo.getCPtr(info));
        }

        public virtual void OnRspFillLocalInput(uint sessionID, int errorCode, TapAPIFillLocalInputReq info)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRspFillLocalInput(swigCPtr, sessionID, errorCode, TapAPIFillLocalInputReq.getCPtr(info));
        }

        public virtual void OnRspFillLocalRemove(uint sessionID, int errorCode, TapAPIFillLocalRemoveReq info)
        {
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_OnRspFillLocalRemove(swigCPtr, sessionID, errorCode, TapAPIFillLocalRemoveReq.getCPtr(info));
        }

        public ITapTradeAPINotify() : this(TapTradeWrapperAPIPINVOKE.new_ITapTradeAPINotify(), true)
        {
            SwigDirectorConnect();
        }

        private void SwigDirectorConnect()
        {
            if (SwigDerivedClassHasMethod("OnConnect", swigMethodTypes0))
                swigDelegate0 = new SwigDelegateITapTradeAPINotify_0(SwigDirectorOnConnect);
            if (SwigDerivedClassHasMethod("OnRspLogin", swigMethodTypes1))
                swigDelegate1 = new SwigDelegateITapTradeAPINotify_1(SwigDirectorOnRspLogin);
            if (SwigDerivedClassHasMethod("OnRtnContactInfo", swigMethodTypes2))
                swigDelegate2 = new SwigDelegateITapTradeAPINotify_2(SwigDirectorOnRtnContactInfo);
            if (SwigDerivedClassHasMethod("OnRspRequestVertificateCode", swigMethodTypes3))
                swigDelegate3 = new SwigDelegateITapTradeAPINotify_3(SwigDirectorOnRspRequestVertificateCode);
            if (SwigDerivedClassHasMethod("OnExpriationDate", swigMethodTypes4))
                swigDelegate4 = new SwigDelegateITapTradeAPINotify_4(SwigDirectorOnExpriationDate);
            if (SwigDerivedClassHasMethod("OnAPIReady", swigMethodTypes5))
                swigDelegate5 = new SwigDelegateITapTradeAPINotify_5(SwigDirectorOnAPIReady);
            if (SwigDerivedClassHasMethod("OnDisconnect", swigMethodTypes6))
                swigDelegate6 = new SwigDelegateITapTradeAPINotify_6(SwigDirectorOnDisconnect);
            if (SwigDerivedClassHasMethod("OnRspChangePassword", swigMethodTypes7))
                swigDelegate7 = new SwigDelegateITapTradeAPINotify_7(SwigDirectorOnRspChangePassword);
            if (SwigDerivedClassHasMethod("OnRspAuthPassword", swigMethodTypes8))
                swigDelegate8 = new SwigDelegateITapTradeAPINotify_8(SwigDirectorOnRspAuthPassword);
            if (SwigDerivedClassHasMethod("OnRspSetReservedInfo", swigMethodTypes9))
                swigDelegate9 = new SwigDelegateITapTradeAPINotify_9(SwigDirectorOnRspSetReservedInfo);
            if (SwigDerivedClassHasMethod("OnRspQryAccount", swigMethodTypes10))
                swigDelegate10 = new SwigDelegateITapTradeAPINotify_10(SwigDirectorOnRspQryAccount);
            if (SwigDerivedClassHasMethod("OnRspQryFund", swigMethodTypes11))
                swigDelegate11 = new SwigDelegateITapTradeAPINotify_11(SwigDirectorOnRspQryFund);
            if (SwigDerivedClassHasMethod("OnRtnFund", swigMethodTypes12))
                swigDelegate12 = new SwigDelegateITapTradeAPINotify_12(SwigDirectorOnRtnFund);
            if (SwigDerivedClassHasMethod("OnRspQryExchange", swigMethodTypes13))
                swigDelegate13 = new SwigDelegateITapTradeAPINotify_13(SwigDirectorOnRspQryExchange);
            if (SwigDerivedClassHasMethod("OnRspQryCommodity", swigMethodTypes14))
                swigDelegate14 = new SwigDelegateITapTradeAPINotify_14(SwigDirectorOnRspQryCommodity);
            if (SwigDerivedClassHasMethod("OnRspQryContract", swigMethodTypes15))
                swigDelegate15 = new SwigDelegateITapTradeAPINotify_15(SwigDirectorOnRspQryContract);
            if (SwigDerivedClassHasMethod("OnRtnContract", swigMethodTypes16))
                swigDelegate16 = new SwigDelegateITapTradeAPINotify_16(SwigDirectorOnRtnContract);
            if (SwigDerivedClassHasMethod("OnRspOrderAction", swigMethodTypes17))
                swigDelegate17 = new SwigDelegateITapTradeAPINotify_17(SwigDirectorOnRspOrderAction);
            if (SwigDerivedClassHasMethod("OnRtnOrder", swigMethodTypes18))
                swigDelegate18 = new SwigDelegateITapTradeAPINotify_18(SwigDirectorOnRtnOrder);
            if (SwigDerivedClassHasMethod("OnRspQryOrder", swigMethodTypes19))
                swigDelegate19 = new SwigDelegateITapTradeAPINotify_19(SwigDirectorOnRspQryOrder);
            if (SwigDerivedClassHasMethod("OnRspQryOrderProcess", swigMethodTypes20))
                swigDelegate20 = new SwigDelegateITapTradeAPINotify_20(SwigDirectorOnRspQryOrderProcess);
            if (SwigDerivedClassHasMethod("OnRspQryFill", swigMethodTypes21))
                swigDelegate21 = new SwigDelegateITapTradeAPINotify_21(SwigDirectorOnRspQryFill);
            if (SwigDerivedClassHasMethod("OnRtnFill", swigMethodTypes22))
                swigDelegate22 = new SwigDelegateITapTradeAPINotify_22(SwigDirectorOnRtnFill);
            if (SwigDerivedClassHasMethod("OnRspQryPosition", swigMethodTypes23))
                swigDelegate23 = new SwigDelegateITapTradeAPINotify_23(SwigDirectorOnRspQryPosition);
            if (SwigDerivedClassHasMethod("OnRtnPosition", swigMethodTypes24))
                swigDelegate24 = new SwigDelegateITapTradeAPINotify_24(SwigDirectorOnRtnPosition);
            if (SwigDerivedClassHasMethod("OnRspQryPositionSummary", swigMethodTypes25))
                swigDelegate25 = new SwigDelegateITapTradeAPINotify_25(SwigDirectorOnRspQryPositionSummary);
            if (SwigDerivedClassHasMethod("OnRtnPositionSummary", swigMethodTypes26))
                swigDelegate26 = new SwigDelegateITapTradeAPINotify_26(SwigDirectorOnRtnPositionSummary);
            if (SwigDerivedClassHasMethod("OnRtnPositionProfit", swigMethodTypes27))
                swigDelegate27 = new SwigDelegateITapTradeAPINotify_27(SwigDirectorOnRtnPositionProfit);
            if (SwigDerivedClassHasMethod("OnRspQryCurrency", swigMethodTypes28))
                swigDelegate28 = new SwigDelegateITapTradeAPINotify_28(SwigDirectorOnRspQryCurrency);
            if (SwigDerivedClassHasMethod("OnRspQryTradeMessage", swigMethodTypes29))
                swigDelegate29 = new SwigDelegateITapTradeAPINotify_29(SwigDirectorOnRspQryTradeMessage);
            if (SwigDerivedClassHasMethod("OnRtnTradeMessage", swigMethodTypes30))
                swigDelegate30 = new SwigDelegateITapTradeAPINotify_30(SwigDirectorOnRtnTradeMessage);
            if (SwigDerivedClassHasMethod("OnRspQryHisOrder", swigMethodTypes31))
                swigDelegate31 = new SwigDelegateITapTradeAPINotify_31(SwigDirectorOnRspQryHisOrder);
            if (SwigDerivedClassHasMethod("OnRspQryHisOrderProcess", swigMethodTypes32))
                swigDelegate32 = new SwigDelegateITapTradeAPINotify_32(SwigDirectorOnRspQryHisOrderProcess);
            if (SwigDerivedClassHasMethod("OnRspQryHisMatch", swigMethodTypes33))
                swigDelegate33 = new SwigDelegateITapTradeAPINotify_33(SwigDirectorOnRspQryHisMatch);
            if (SwigDerivedClassHasMethod("OnRspQryHisPosition", swigMethodTypes34))
                swigDelegate34 = new SwigDelegateITapTradeAPINotify_34(SwigDirectorOnRspQryHisPosition);
            if (SwigDerivedClassHasMethod("OnRspQryHisDelivery", swigMethodTypes35))
                swigDelegate35 = new SwigDelegateITapTradeAPINotify_35(SwigDirectorOnRspQryHisDelivery);
            if (SwigDerivedClassHasMethod("OnRspQryAccountCashAdjust", swigMethodTypes36))
                swigDelegate36 = new SwigDelegateITapTradeAPINotify_36(SwigDirectorOnRspQryAccountCashAdjust);
            if (SwigDerivedClassHasMethod("OnRspQryBill", swigMethodTypes37))
                swigDelegate37 = new SwigDelegateITapTradeAPINotify_37(SwigDirectorOnRspQryBill);
            if (SwigDerivedClassHasMethod("OnRspQryAccountFeeRent", swigMethodTypes38))
                swigDelegate38 = new SwigDelegateITapTradeAPINotify_38(SwigDirectorOnRspQryAccountFeeRent);
            if (SwigDerivedClassHasMethod("OnRspQryAccountMarginRent", swigMethodTypes39))
                swigDelegate39 = new SwigDelegateITapTradeAPINotify_39(SwigDirectorOnRspQryAccountMarginRent);
            if (SwigDerivedClassHasMethod("OnRspHKMarketOrderInsert", swigMethodTypes40))
                swigDelegate40 = new SwigDelegateITapTradeAPINotify_40(SwigDirectorOnRspHKMarketOrderInsert);
            if (SwigDerivedClassHasMethod("OnRspHKMarketOrderDelete", swigMethodTypes41))
                swigDelegate41 = new SwigDelegateITapTradeAPINotify_41(SwigDirectorOnRspHKMarketOrderDelete);
            if (SwigDerivedClassHasMethod("OnHKMarketQuoteNotice", swigMethodTypes42))
                swigDelegate42 = new SwigDelegateITapTradeAPINotify_42(SwigDirectorOnHKMarketQuoteNotice);
            if (SwigDerivedClassHasMethod("OnRspOrderLocalRemove", swigMethodTypes43))
                swigDelegate43 = new SwigDelegateITapTradeAPINotify_43(SwigDirectorOnRspOrderLocalRemove);
            if (SwigDerivedClassHasMethod("OnRspOrderLocalInput", swigMethodTypes44))
                swigDelegate44 = new SwigDelegateITapTradeAPINotify_44(SwigDirectorOnRspOrderLocalInput);
            if (SwigDerivedClassHasMethod("OnRspOrderLocalModify", swigMethodTypes45))
                swigDelegate45 = new SwigDelegateITapTradeAPINotify_45(SwigDirectorOnRspOrderLocalModify);
            if (SwigDerivedClassHasMethod("OnRspOrderLocalTransfer", swigMethodTypes46))
                swigDelegate46 = new SwigDelegateITapTradeAPINotify_46(SwigDirectorOnRspOrderLocalTransfer);
            if (SwigDerivedClassHasMethod("OnRspFillLocalInput", swigMethodTypes47))
                swigDelegate47 = new SwigDelegateITapTradeAPINotify_47(SwigDirectorOnRspFillLocalInput);
            if (SwigDerivedClassHasMethod("OnRspFillLocalRemove", swigMethodTypes48))
                swigDelegate48 = new SwigDelegateITapTradeAPINotify_48(SwigDirectorOnRspFillLocalRemove);
            TapTradeWrapperAPIPINVOKE.ITapTradeAPINotify_director_connect(swigCPtr, swigDelegate0, swigDelegate1, swigDelegate2, swigDelegate3, swigDelegate4, swigDelegate5, swigDelegate6, swigDelegate7, swigDelegate8, swigDelegate9, swigDelegate10, swigDelegate11, swigDelegate12, swigDelegate13, swigDelegate14, swigDelegate15, swigDelegate16, swigDelegate17, swigDelegate18, swigDelegate19, swigDelegate20, swigDelegate21, swigDelegate22, swigDelegate23, swigDelegate24, swigDelegate25, swigDelegate26, swigDelegate27, swigDelegate28, swigDelegate29, swigDelegate30, swigDelegate31, swigDelegate32, swigDelegate33, swigDelegate34, swigDelegate35, swigDelegate36, swigDelegate37, swigDelegate38, swigDelegate39, swigDelegate40, swigDelegate41, swigDelegate42, swigDelegate43, swigDelegate44, swigDelegate45, swigDelegate46, swigDelegate47, swigDelegate48);
        }

        private bool SwigDerivedClassHasMethod(string methodName, global::System.Type[] methodTypes)
        {
            global::System.Reflection.MethodInfo methodInfo = this.GetType().GetMethod(methodName, global::System.Reflection.BindingFlags.Public | global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Instance, null, methodTypes, null);
            bool hasDerivedMethod = methodInfo.DeclaringType.IsSubclassOf(typeof(ITapTradeAPINotify));
            return hasDerivedMethod;
        }

        private void SwigDirectorOnConnect()
        {
            OnConnect();
        }

        private void SwigDirectorOnRspLogin(int errorCode, global::System.IntPtr loginRspInfo)
        {
            OnRspLogin(errorCode, (loginRspInfo == global::System.IntPtr.Zero) ? null : new TapAPITradeLoginRspInfo(loginRspInfo, false));
        }

        private void SwigDirectorOnRtnContactInfo(int errorCode, char isLast, string ContactInfo)
        {
            OnRtnContactInfo(errorCode, isLast, ContactInfo);
        }

        private void SwigDirectorOnRspRequestVertificateCode(uint sessionID, int errorCode, global::System.IntPtr rsp)
        {
            OnRspRequestVertificateCode(sessionID, errorCode, (rsp == global::System.IntPtr.Zero) ? null : new TapAPIRequestVertificateCodeRsp(rsp, false));
        }

        private void SwigDirectorOnExpriationDate(string date, int days)
        {
            OnExpriationDate(date, days);
        }

        private void SwigDirectorOnAPIReady(int errorCode)
        {
            OnAPIReady(errorCode);
        }

        private void SwigDirectorOnDisconnect(int reasonCode)
        {
            OnDisconnect(reasonCode);
        }

        private void SwigDirectorOnRspChangePassword(uint sessionID, int errorCode)
        {
            OnRspChangePassword(sessionID, errorCode);
        }

        private void SwigDirectorOnRspAuthPassword(uint sessionID, int errorCode)
        {
            OnRspAuthPassword(sessionID, errorCode);
        }

        private void SwigDirectorOnRspSetReservedInfo(uint sessionID, int errorCode, string info)
        {
            OnRspSetReservedInfo(sessionID, errorCode, info);
        }

        private void SwigDirectorOnRspQryAccount(uint sessionID, uint errorCode, char isLast, global::System.IntPtr info)
        {
            OnRspQryAccount(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPIAccountInfo(info, false));
        }

        private void SwigDirectorOnRspQryFund(uint sessionID, int errorCode, char isLast, global::System.IntPtr info)
        {
            OnRspQryFund(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPIFundData(info, false));
        }

        private void SwigDirectorOnRtnFund(global::System.IntPtr info)
        {
            OnRtnFund((info == global::System.IntPtr.Zero) ? null : new TapAPIFundData(info, false));
        }

        private void SwigDirectorOnRspQryExchange(uint sessionID, int errorCode, char isLast, global::System.IntPtr info)
        {
            OnRspQryExchange(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPIExchangeInfo(info, false));
        }

        private void SwigDirectorOnRspQryCommodity(uint sessionID, int errorCode, char isLast, global::System.IntPtr info)
        {
            OnRspQryCommodity(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPICommodityInfo(info, false));
        }

        private void SwigDirectorOnRspQryContract(uint sessionID, int errorCode, char isLast, global::System.IntPtr info)
        {
            OnRspQryContract(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPITradeContractInfo(info, false));
        }

        private void SwigDirectorOnRtnContract(global::System.IntPtr info)
        {
            OnRtnContract((info == global::System.IntPtr.Zero) ? null : new TapAPITradeContractInfo(info, false));
        }

        private void SwigDirectorOnRspOrderAction(uint sessionID, int errorCode, global::System.IntPtr info)
        {
            OnRspOrderAction(sessionID, errorCode, (info == global::System.IntPtr.Zero) ? null : new TapAPIOrderActionRsp(info, false));
        }

        private void SwigDirectorOnRtnOrder(global::System.IntPtr info)
        {
            OnRtnOrder((info == global::System.IntPtr.Zero) ? null : new TapAPIOrderInfoNotice(info, false));
        }

        private void SwigDirectorOnRspQryOrder(uint sessionID, int errorCode, char isLast, global::System.IntPtr info)
        {
            OnRspQryOrder(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPIOrderInfo(info, false));
        }

        private void SwigDirectorOnRspQryOrderProcess(uint sessionID, int errorCode, char isLast, global::System.IntPtr info)
        {
            OnRspQryOrderProcess(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPIOrderInfo(info, false));
        }

        private void SwigDirectorOnRspQryFill(uint sessionID, int errorCode, char isLast, global::System.IntPtr info)
        {
            OnRspQryFill(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPIFillInfo(info, false));
        }

        private void SwigDirectorOnRtnFill(global::System.IntPtr info)
        {
            OnRtnFill((info == global::System.IntPtr.Zero) ? null : new TapAPIFillInfo(info, false));
        }

        private void SwigDirectorOnRspQryPosition(uint sessionID, int errorCode, char isLast, global::System.IntPtr info)
        {
            OnRspQryPosition(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPIPositionInfo(info, false));
        }

        private void SwigDirectorOnRtnPosition(global::System.IntPtr info)
        {
            OnRtnPosition((info == global::System.IntPtr.Zero) ? null : new TapAPIPositionInfo(info, false));
        }

        private void SwigDirectorOnRspQryPositionSummary(uint sessionID, int errorCode, char isLast, global::System.IntPtr info)
        {
            OnRspQryPositionSummary(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPIPositionSummary(info, false));
        }

        private void SwigDirectorOnRtnPositionSummary(global::System.IntPtr info)
        {
            OnRtnPositionSummary((info == global::System.IntPtr.Zero) ? null : new TapAPIPositionSummary(info, false));
        }

        private void SwigDirectorOnRtnPositionProfit(global::System.IntPtr info)
        {
            OnRtnPositionProfit((info == global::System.IntPtr.Zero) ? null : new TapAPIPositionProfitNotice(info, false));
        }

        private void SwigDirectorOnRspQryCurrency(uint sessionID, int errorCode, char isLast, global::System.IntPtr info)
        {
            OnRspQryCurrency(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPICurrencyInfo(info, false));
        }

        private void SwigDirectorOnRspQryTradeMessage(uint sessionID, int errorCode, char isLast, global::System.IntPtr info)
        {
            OnRspQryTradeMessage(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPITradeMessage(info, false));
        }

        private void SwigDirectorOnRtnTradeMessage(global::System.IntPtr info)
        {
            OnRtnTradeMessage((info == global::System.IntPtr.Zero) ? null : new TapAPITradeMessage(info, false));
        }

        private void SwigDirectorOnRspQryHisOrder(uint sessionID, int errorCode, char isLast, global::System.IntPtr info)
        {
            OnRspQryHisOrder(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPIHisOrderQryRsp(info, false));
        }

        private void SwigDirectorOnRspQryHisOrderProcess(uint sessionID, int errorCode, char isLast, global::System.IntPtr info)
        {
            OnRspQryHisOrderProcess(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPIHisOrderQryRsp(info, false));
        }

        private void SwigDirectorOnRspQryHisMatch(uint sessionID, int errorCode, char isLast, global::System.IntPtr info)
        {
            OnRspQryHisMatch(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPIHisMatchQryRsp(info, false));
        }

        private void SwigDirectorOnRspQryHisPosition(uint sessionID, int errorCode, char isLast, global::System.IntPtr info)
        {
            OnRspQryHisPosition(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPIHisPositionQryRsp(info, false));
        }

        private void SwigDirectorOnRspQryHisDelivery(uint sessionID, int errorCode, char isLast, global::System.IntPtr info)
        {
            OnRspQryHisDelivery(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPIHisDeliveryQryRsp(info, false));
        }

        private void SwigDirectorOnRspQryAccountCashAdjust(uint sessionID, int errorCode, char isLast, global::System.IntPtr info)
        {
            OnRspQryAccountCashAdjust(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPIAccountCashAdjustQryRsp(info, false));
        }

        private void SwigDirectorOnRspQryBill(uint sessionID, int errorCode, char isLast, global::System.IntPtr info)
        {
            OnRspQryBill(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPIBillQryRsp(info, false));
        }

        private void SwigDirectorOnRspQryAccountFeeRent(uint sessionID, int errorCode, char isLast, global::System.IntPtr info)
        {
            OnRspQryAccountFeeRent(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPIAccountFeeRentQryRsp(info, false));
        }

        private void SwigDirectorOnRspQryAccountMarginRent(uint sessionID, int errorCode, char isLast, global::System.IntPtr info)
        {
            OnRspQryAccountMarginRent(sessionID, errorCode, isLast, (info == global::System.IntPtr.Zero) ? null : new TapAPIAccountMarginRentQryRsp(info, false));
        }

        private void SwigDirectorOnRspHKMarketOrderInsert(uint sessionID, int errorCode, global::System.IntPtr info)
        {
            OnRspHKMarketOrderInsert(sessionID, errorCode, (info == global::System.IntPtr.Zero) ? null : new TapAPIOrderMarketInsertRsp(info, false));
        }

        private void SwigDirectorOnRspHKMarketOrderDelete(uint sessionID, int errorCode, global::System.IntPtr info)
        {
            OnRspHKMarketOrderDelete(sessionID, errorCode, (info == global::System.IntPtr.Zero) ? null : new TapAPIOrderMarketInsertRsp(info, false));
        }

        private void SwigDirectorOnHKMarketQuoteNotice(global::System.IntPtr info)
        {
            OnHKMarketQuoteNotice((info == global::System.IntPtr.Zero) ? null : new TapAPIOrderQuoteMarketNotice(info, false));
        }

        private void SwigDirectorOnRspOrderLocalRemove(uint sessionID, int errorCode, global::System.IntPtr info)
        {
            OnRspOrderLocalRemove(sessionID, errorCode, (info == global::System.IntPtr.Zero) ? null : new TapAPIOrderLocalRemoveRsp(info, false));
        }

        private void SwigDirectorOnRspOrderLocalInput(uint sessionID, int errorCode, global::System.IntPtr info)
        {
            OnRspOrderLocalInput(sessionID, errorCode, (info == global::System.IntPtr.Zero) ? null : new TapAPIOrderInfo(info, false));
        }

        private void SwigDirectorOnRspOrderLocalModify(uint sessionID, int errorCode, global::System.IntPtr info)
        {
            OnRspOrderLocalModify(sessionID, errorCode, (info == global::System.IntPtr.Zero) ? null : new TapAPIOrderInfo(info, false));
        }

        private void SwigDirectorOnRspOrderLocalTransfer(uint sessionID, int errorCode, global::System.IntPtr info)
        {
            OnRspOrderLocalTransfer(sessionID, errorCode, (info == global::System.IntPtr.Zero) ? null : new TapAPIOrderInfo(info, false));
        }

        private void SwigDirectorOnRspFillLocalInput(uint sessionID, int errorCode, global::System.IntPtr info)
        {
            OnRspFillLocalInput(sessionID, errorCode, (info == global::System.IntPtr.Zero) ? null : new TapAPIFillLocalInputReq(info, false));
        }

        private void SwigDirectorOnRspFillLocalRemove(uint sessionID, int errorCode, global::System.IntPtr info)
        {
            OnRspFillLocalRemove(sessionID, errorCode, (info == global::System.IntPtr.Zero) ? null : new TapAPIFillLocalRemoveReq(info, false));
        }

        public delegate void SwigDelegateITapTradeAPINotify_0();
        public delegate void SwigDelegateITapTradeAPINotify_1(int errorCode, global::System.IntPtr loginRspInfo);
        public delegate void SwigDelegateITapTradeAPINotify_2(int errorCode, char isLast, string ContactInfo);
        public delegate void SwigDelegateITapTradeAPINotify_3(uint sessionID, int errorCode, global::System.IntPtr rsp);
        public delegate void SwigDelegateITapTradeAPINotify_4(string date, int days);
        public delegate void SwigDelegateITapTradeAPINotify_5(int errorCode);
        public delegate void SwigDelegateITapTradeAPINotify_6(int reasonCode);
        public delegate void SwigDelegateITapTradeAPINotify_7(uint sessionID, int errorCode);
        public delegate void SwigDelegateITapTradeAPINotify_8(uint sessionID, int errorCode);
        public delegate void SwigDelegateITapTradeAPINotify_9(uint sessionID, int errorCode, string info);
        public delegate void SwigDelegateITapTradeAPINotify_10(uint sessionID, uint errorCode, char isLast, global::System.IntPtr info);
        public delegate void SwigDelegateITapTradeAPINotify_11(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
        public delegate void SwigDelegateITapTradeAPINotify_12(global::System.IntPtr info);
        public delegate void SwigDelegateITapTradeAPINotify_13(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
        public delegate void SwigDelegateITapTradeAPINotify_14(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
        public delegate void SwigDelegateITapTradeAPINotify_15(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
        public delegate void SwigDelegateITapTradeAPINotify_16(global::System.IntPtr info);
        public delegate void SwigDelegateITapTradeAPINotify_17(uint sessionID, int errorCode, global::System.IntPtr info);
        public delegate void SwigDelegateITapTradeAPINotify_18(global::System.IntPtr info);
        public delegate void SwigDelegateITapTradeAPINotify_19(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
        public delegate void SwigDelegateITapTradeAPINotify_20(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
        public delegate void SwigDelegateITapTradeAPINotify_21(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
        public delegate void SwigDelegateITapTradeAPINotify_22(global::System.IntPtr info);
        public delegate void SwigDelegateITapTradeAPINotify_23(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
        public delegate void SwigDelegateITapTradeAPINotify_24(global::System.IntPtr info);
        public delegate void SwigDelegateITapTradeAPINotify_25(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
        public delegate void SwigDelegateITapTradeAPINotify_26(global::System.IntPtr info);
        public delegate void SwigDelegateITapTradeAPINotify_27(global::System.IntPtr info);
        public delegate void SwigDelegateITapTradeAPINotify_28(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
        public delegate void SwigDelegateITapTradeAPINotify_29(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
        public delegate void SwigDelegateITapTradeAPINotify_30(global::System.IntPtr info);
        public delegate void SwigDelegateITapTradeAPINotify_31(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
        public delegate void SwigDelegateITapTradeAPINotify_32(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
        public delegate void SwigDelegateITapTradeAPINotify_33(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
        public delegate void SwigDelegateITapTradeAPINotify_34(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
        public delegate void SwigDelegateITapTradeAPINotify_35(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
        public delegate void SwigDelegateITapTradeAPINotify_36(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
        public delegate void SwigDelegateITapTradeAPINotify_37(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
        public delegate void SwigDelegateITapTradeAPINotify_38(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
        public delegate void SwigDelegateITapTradeAPINotify_39(uint sessionID, int errorCode, char isLast, global::System.IntPtr info);
        public delegate void SwigDelegateITapTradeAPINotify_40(uint sessionID, int errorCode, global::System.IntPtr info);
        public delegate void SwigDelegateITapTradeAPINotify_41(uint sessionID, int errorCode, global::System.IntPtr info);
        public delegate void SwigDelegateITapTradeAPINotify_42(global::System.IntPtr info);
        public delegate void SwigDelegateITapTradeAPINotify_43(uint sessionID, int errorCode, global::System.IntPtr info);
        public delegate void SwigDelegateITapTradeAPINotify_44(uint sessionID, int errorCode, global::System.IntPtr info);
        public delegate void SwigDelegateITapTradeAPINotify_45(uint sessionID, int errorCode, global::System.IntPtr info);
        public delegate void SwigDelegateITapTradeAPINotify_46(uint sessionID, int errorCode, global::System.IntPtr info);
        public delegate void SwigDelegateITapTradeAPINotify_47(uint sessionID, int errorCode, global::System.IntPtr info);
        public delegate void SwigDelegateITapTradeAPINotify_48(uint sessionID, int errorCode, global::System.IntPtr info);

        private SwigDelegateITapTradeAPINotify_0 swigDelegate0;
        private SwigDelegateITapTradeAPINotify_1 swigDelegate1;
        private SwigDelegateITapTradeAPINotify_2 swigDelegate2;
        private SwigDelegateITapTradeAPINotify_3 swigDelegate3;
        private SwigDelegateITapTradeAPINotify_4 swigDelegate4;
        private SwigDelegateITapTradeAPINotify_5 swigDelegate5;
        private SwigDelegateITapTradeAPINotify_6 swigDelegate6;
        private SwigDelegateITapTradeAPINotify_7 swigDelegate7;
        private SwigDelegateITapTradeAPINotify_8 swigDelegate8;
        private SwigDelegateITapTradeAPINotify_9 swigDelegate9;
        private SwigDelegateITapTradeAPINotify_10 swigDelegate10;
        private SwigDelegateITapTradeAPINotify_11 swigDelegate11;
        private SwigDelegateITapTradeAPINotify_12 swigDelegate12;
        private SwigDelegateITapTradeAPINotify_13 swigDelegate13;
        private SwigDelegateITapTradeAPINotify_14 swigDelegate14;
        private SwigDelegateITapTradeAPINotify_15 swigDelegate15;
        private SwigDelegateITapTradeAPINotify_16 swigDelegate16;
        private SwigDelegateITapTradeAPINotify_17 swigDelegate17;
        private SwigDelegateITapTradeAPINotify_18 swigDelegate18;
        private SwigDelegateITapTradeAPINotify_19 swigDelegate19;
        private SwigDelegateITapTradeAPINotify_20 swigDelegate20;
        private SwigDelegateITapTradeAPINotify_21 swigDelegate21;
        private SwigDelegateITapTradeAPINotify_22 swigDelegate22;
        private SwigDelegateITapTradeAPINotify_23 swigDelegate23;
        private SwigDelegateITapTradeAPINotify_24 swigDelegate24;
        private SwigDelegateITapTradeAPINotify_25 swigDelegate25;
        private SwigDelegateITapTradeAPINotify_26 swigDelegate26;
        private SwigDelegateITapTradeAPINotify_27 swigDelegate27;
        private SwigDelegateITapTradeAPINotify_28 swigDelegate28;
        private SwigDelegateITapTradeAPINotify_29 swigDelegate29;
        private SwigDelegateITapTradeAPINotify_30 swigDelegate30;
        private SwigDelegateITapTradeAPINotify_31 swigDelegate31;
        private SwigDelegateITapTradeAPINotify_32 swigDelegate32;
        private SwigDelegateITapTradeAPINotify_33 swigDelegate33;
        private SwigDelegateITapTradeAPINotify_34 swigDelegate34;
        private SwigDelegateITapTradeAPINotify_35 swigDelegate35;
        private SwigDelegateITapTradeAPINotify_36 swigDelegate36;
        private SwigDelegateITapTradeAPINotify_37 swigDelegate37;
        private SwigDelegateITapTradeAPINotify_38 swigDelegate38;
        private SwigDelegateITapTradeAPINotify_39 swigDelegate39;
        private SwigDelegateITapTradeAPINotify_40 swigDelegate40;
        private SwigDelegateITapTradeAPINotify_41 swigDelegate41;
        private SwigDelegateITapTradeAPINotify_42 swigDelegate42;
        private SwigDelegateITapTradeAPINotify_43 swigDelegate43;
        private SwigDelegateITapTradeAPINotify_44 swigDelegate44;
        private SwigDelegateITapTradeAPINotify_45 swigDelegate45;
        private SwigDelegateITapTradeAPINotify_46 swigDelegate46;
        private SwigDelegateITapTradeAPINotify_47 swigDelegate47;
        private SwigDelegateITapTradeAPINotify_48 swigDelegate48;

        private static global::System.Type[] swigMethodTypes0 = new global::System.Type[] { };
        private static global::System.Type[] swigMethodTypes1 = new global::System.Type[] { typeof(int), typeof(TapAPITradeLoginRspInfo) };
        private static global::System.Type[] swigMethodTypes2 = new global::System.Type[] { typeof(int), typeof(char), typeof(string) };
        private static global::System.Type[] swigMethodTypes3 = new global::System.Type[] { typeof(uint), typeof(int), typeof(TapAPIRequestVertificateCodeRsp) };
        private static global::System.Type[] swigMethodTypes4 = new global::System.Type[] { typeof(string), typeof(int) };
        private static global::System.Type[] swigMethodTypes5 = new global::System.Type[] { typeof(int) };
        private static global::System.Type[] swigMethodTypes6 = new global::System.Type[] { typeof(int) };
        private static global::System.Type[] swigMethodTypes7 = new global::System.Type[] { typeof(uint), typeof(int) };
        private static global::System.Type[] swigMethodTypes8 = new global::System.Type[] { typeof(uint), typeof(int) };
        private static global::System.Type[] swigMethodTypes9 = new global::System.Type[] { typeof(uint), typeof(int), typeof(string) };
        private static global::System.Type[] swigMethodTypes10 = new global::System.Type[] { typeof(uint), typeof(uint), typeof(char), typeof(TapAPIAccountInfo) };
        private static global::System.Type[] swigMethodTypes11 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIFundData) };
        private static global::System.Type[] swigMethodTypes12 = new global::System.Type[] { typeof(TapAPIFundData) };
        private static global::System.Type[] swigMethodTypes13 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIExchangeInfo) };
        private static global::System.Type[] swigMethodTypes14 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPICommodityInfo) };
        private static global::System.Type[] swigMethodTypes15 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPITradeContractInfo) };
        private static global::System.Type[] swigMethodTypes16 = new global::System.Type[] { typeof(TapAPITradeContractInfo) };
        private static global::System.Type[] swigMethodTypes17 = new global::System.Type[] { typeof(uint), typeof(int), typeof(TapAPIOrderActionRsp) };
        private static global::System.Type[] swigMethodTypes18 = new global::System.Type[] { typeof(TapAPIOrderInfoNotice) };
        private static global::System.Type[] swigMethodTypes19 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIOrderInfo) };
        private static global::System.Type[] swigMethodTypes20 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIOrderInfo) };
        private static global::System.Type[] swigMethodTypes21 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIFillInfo) };
        private static global::System.Type[] swigMethodTypes22 = new global::System.Type[] { typeof(TapAPIFillInfo) };
        private static global::System.Type[] swigMethodTypes23 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIPositionInfo) };
        private static global::System.Type[] swigMethodTypes24 = new global::System.Type[] { typeof(TapAPIPositionInfo) };
        private static global::System.Type[] swigMethodTypes25 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIPositionSummary) };
        private static global::System.Type[] swigMethodTypes26 = new global::System.Type[] { typeof(TapAPIPositionSummary) };
        private static global::System.Type[] swigMethodTypes27 = new global::System.Type[] { typeof(TapAPIPositionProfitNotice) };
        private static global::System.Type[] swigMethodTypes28 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPICurrencyInfo) };
        private static global::System.Type[] swigMethodTypes29 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPITradeMessage) };
        private static global::System.Type[] swigMethodTypes30 = new global::System.Type[] { typeof(TapAPITradeMessage) };
        private static global::System.Type[] swigMethodTypes31 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIHisOrderQryRsp) };
        private static global::System.Type[] swigMethodTypes32 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIHisOrderQryRsp) };
        private static global::System.Type[] swigMethodTypes33 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIHisMatchQryRsp) };
        private static global::System.Type[] swigMethodTypes34 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIHisPositionQryRsp) };
        private static global::System.Type[] swigMethodTypes35 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIHisDeliveryQryRsp) };
        private static global::System.Type[] swigMethodTypes36 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIAccountCashAdjustQryRsp) };
        private static global::System.Type[] swigMethodTypes37 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIBillQryRsp) };
        private static global::System.Type[] swigMethodTypes38 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIAccountFeeRentQryRsp) };
        private static global::System.Type[] swigMethodTypes39 = new global::System.Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIAccountMarginRentQryRsp) };
        private static global::System.Type[] swigMethodTypes40 = new global::System.Type[] { typeof(uint), typeof(int), typeof(TapAPIOrderMarketInsertRsp) };
        private static global::System.Type[] swigMethodTypes41 = new global::System.Type[] { typeof(uint), typeof(int), typeof(TapAPIOrderMarketInsertRsp) };
        private static global::System.Type[] swigMethodTypes42 = new global::System.Type[] { typeof(TapAPIOrderQuoteMarketNotice) };
        private static global::System.Type[] swigMethodTypes43 = new global::System.Type[] { typeof(uint), typeof(int), typeof(TapAPIOrderLocalRemoveRsp) };
        private static global::System.Type[] swigMethodTypes44 = new global::System.Type[] { typeof(uint), typeof(int), typeof(TapAPIOrderInfo) };
        private static global::System.Type[] swigMethodTypes45 = new global::System.Type[] { typeof(uint), typeof(int), typeof(TapAPIOrderInfo) };
        private static global::System.Type[] swigMethodTypes46 = new global::System.Type[] { typeof(uint), typeof(int), typeof(TapAPIOrderInfo) };
        private static global::System.Type[] swigMethodTypes47 = new global::System.Type[] { typeof(uint), typeof(int), typeof(TapAPIFillLocalInputReq) };
        private static global::System.Type[] swigMethodTypes48 = new global::System.Type[] { typeof(uint), typeof(int), typeof(TapAPIFillLocalRemoveReq) };
    }

}
